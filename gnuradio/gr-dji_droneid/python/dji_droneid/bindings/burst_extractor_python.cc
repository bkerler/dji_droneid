/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(burst_extractor.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(7bf7a5ce653e37c004b46a6f723a4319)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/dji_droneid/burst_extractor.h>
// pydoc.h is automatically generated in the build directory
#include <burst_extractor_pydoc.h>

void bind_burst_extractor(py::module& m)
{

    using burst_extractor = ::gr::dji_droneid::burst_extractor;


    py::class_<burst_extractor,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<burst_extractor>>(m, "burst_extractor", D(burst_extractor))

        .def(py::init(&burst_extractor::make),
             py::arg("sample_rate"),
             py::arg("threshold"),
             D(burst_extractor, make))


        .def("set_threshold",
             &burst_extractor::set_threshold,
             py::arg("threshold"),
             D(burst_extractor, set_threshold))


        .def("get_output_port_name",
             &burst_extractor::get_output_port_name,
             D(burst_extractor, get_output_port_name))

        ;
}
