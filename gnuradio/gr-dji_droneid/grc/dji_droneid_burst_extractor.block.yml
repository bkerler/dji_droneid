id: dji_droneid_burst_extractor
label: Burst Extractor
category: '[dji_droneid]'

templates:
  imports: from gnuradio import dji_droneid
  make: dji_droneid.burst_extractor(${sample_rate}, ${threshold})
  callbacks:
    - set_threshold(${threshold})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
- id: sample_rate
  label: Sample Rate (Hz)
  dtype: float
- id: threshold
  label: Threshold
  dtype: float
  default: 0.7

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: samples
  domain: stream
  dtype: complex
  vlen: 1
  optional: 0
- label: scores
  domain: stream
  dtype: float
  vlen: 1
  optional: 0

outputs:
- label: bursts
  domain: message
  optional: 1

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
